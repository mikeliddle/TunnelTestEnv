#  TAG: acl
#	Defining an Access List
#
#	Every access list definition must begin with an aclname and acltype, 
#	followed by either type-specific arguments or a quoted filename that
#	they are read from.
#
#	   acl aclname acltype argument ...
#	   acl aclname acltype "file" ...
#
#	When using "file", the file should contain one item per line.
#
#
#	ACL Options
#
#	Some acl types supports options which changes their default behaviour:
#
#	-i,+i	By default, regular expressions are CASE-SENSITIVE. To make them
#		case-insensitive, use the -i option. To return case-sensitive
#		use the +i option between patterns, or make a new ACL line
#		without -i.	
#
#	-n	Disable lookups and address type conversions.  If lookup or
#		conversion is required because the parameter type (IP or
#		domain name) does not match the message address type (domain
#		name or IP), then the ACL would immediately declare a mismatch
#		without any warnings or lookups.
#
#	-m[=delimiters]
#		Perform a list membership test, interpreting values as
#		comma-separated token lists and matching against individual
#		tokens instead of whole values. 
#		The optional "delimiters" parameter specifies one or more
#		alternative non-alphanumeric delimiter characters.
#		non-alphanumeric delimiter characters.
#
#	--	Used to stop processing all options, in the case the first acl
#		value has '-' character as first character (for example the '-'
#		is a valid domain name)
#
#	Some acl types require suspending the current request in order
#	to access some external data source.
#	Those which do are marked with the tag [slow], those which
#	don't are marked as [fast].
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl
#	for further information
#
#	***** ACL TYPES AVAILABLE *****
#
#	acl aclname src ip-address/mask ...	# clients IP address [fast]
#	acl aclname src addr1-addr2/mask ...	# range of addresses [fast]
#	acl aclname dst [-n] ip-address/mask ...	# URL host's IP address [slow]
#	acl aclname localip ip-address/mask ... # IP address the client connected to [fast]
#
#if USE_SQUID_EUI
#	acl aclname arp      mac-address ...
#	acl aclname eui64    eui64-address ...
#	  # [fast]
#	  # MAC (EUI-48) and EUI-64 addresses use xx:xx:xx:xx:xx:xx notation.
#	  #
#	  # The 'arp' ACL code is not portable to all operating systems.
#	  # It works on Linux, Solaris, Windows, FreeBSD, and some other
#	  # BSD variants.
#	  #
#	  # The eui_lookup directive is required to be 'on' (the default)
#	  # and Squid built with --enable-eui for MAC/EUI addresses to be
#	  # available for this ACL.
#	  #
#	  # Squid can only determine the MAC/EUI address for IPv4
#	  # clients that are on the same subnet. If the client is on a
#	  # different subnet, then Squid cannot find out its address.
#	  #
#	  # IPv6 protocol does not contain ARP. MAC/EUI is either
#	  # encoded directly in the IPv6 address or not available.
#endif
#	acl aclname clientside_mark mark[/mask] ...
#	  # matches CONNMARK of an accepted connection [fast]
#	  #
#	  # mark and mask are unsigned integers (hex, octal, or decimal).
#	  # If multiple marks are given, then the ACL matches if at least
#	  # one mark matches.
#	  #
#	  # Uses netfilter-conntrack library.
#	  # Requires building Squid with --enable-linux-netfilter.
#	  #
#	  # The client, various intermediaries, and Squid itself may set
#	  # CONNMARK at various times. The last CONNMARK set wins. This ACL
#	  # checks the mark present on an accepted connection or set by
#	  # Squid afterwards, depending on the ACL check timing. This ACL
#	  # effectively ignores any mark set by other agents after Squid has
#	  # accepted the connection.
#
#	acl aclname srcdomain   .foo.com ...
#	  # reverse lookup, from client IP [slow]
#	acl aclname dstdomain [-n] .foo.com ...
#	  # Destination server from URL [fast]
#	acl aclname srcdom_regex [-i] \.foo\.com ...
#	  # regex matching client name [slow]
#	acl aclname dstdom_regex [-n] [-i] \.foo\.com ...
#	  # regex matching server [fast]
#	  #
#	  # For dstdomain and dstdom_regex a reverse lookup is tried if a IP
#	  # based URL is used and no match is found. The name "none" is used
#	  # if the reverse lookup fails.
#
#	acl aclname src_as number ...
#	acl aclname dst_as number ...
#	  # [fast]
#	  # Except for access control, AS numbers can be used for
#	  # routing of requests to specific caches. Here's an
#	  # example for routing all requests for AS#1241 and only
#	  # those to mycache.mydomain.net:
#	  # acl asexample dst_as 1241
#	  # cache_peer_access mycache.mydomain.net allow asexample
#	  # cache_peer_access mycache_mydomain.net deny all
#
#	acl aclname peername myPeer ...
#	acl aclname peername_regex [-i] regex-pattern ...
#	  # [fast]
#	  # match against a named cache_peer entry
#	  # set unique name= on cache_peer lines for reliable use.
#
#	acl aclname time [day-abbrevs] [h1:m1-h2:m2]
#	  # [fast]
#	  #  day-abbrevs:
#	  #	S - Sunday
#	  #	M - Monday
#	  #	T - Tuesday
#	  #	W - Wednesday
#	  #	H - Thursday
#	  #	F - Friday
#	  #	A - Saturday
#	  #  h1:m1 must be less than h2:m2
#
#	acl aclname url_regex [-i] ^http:// ...
#	  # regex matching on whole URL [fast]
#	acl aclname urllogin [-i] [^a-zA-Z0-9] ...
#	  # regex matching on URL login field
#	acl aclname urlpath_regex [-i] \.gif$ ...
#	  # regex matching on URL path [fast]
#
#	acl aclname port 80 70 21 0-1024...   # destination TCP port [fast]
#	                                      # ranges are alloed
#	acl aclname localport 3128 ...	      # TCP port the client connected to [fast]
#	                                      # NP: for interception mode this is usually '80'
#
#	acl aclname myportname 3128 ...       # *_port name [fast]
#
#	acl aclname proto HTTP FTP ...        # request protocol [fast]
# 
#	acl aclname method GET POST ...       # HTTP request method [fast]
#
#	acl aclname http_status 200 301 500- 400-403 ... 
#	  # status code in reply [fast]
#
#	acl aclname browser [-i] regexp ...
#	  # pattern match on User-Agent header (see also req_header below) [fast]
#
#	acl aclname referer_regex [-i] regexp ...
#	  # pattern match on Referer header [fast]
#	  # Referer is highly unreliable, so use with care
#
#	acl aclname ident [-i] username ...
#	acl aclname ident_regex [-i] pattern ...
#	  # string match on ident output [slow]
#	  # use REQUIRED to accept any non-null ident.
#
#	acl aclname proxy_auth [-i] username ...
#	acl aclname proxy_auth_regex [-i] pattern ...
#	  # perform http authentication challenge to the client and match against
#	  # supplied credentials [slow]
#	  #
#	  # takes a list of allowed usernames.
#	  # use REQUIRED to accept any valid username.
#	  #
#	  # Will use proxy authentication in forward-proxy scenarios, and plain
#	  # http authenticaiton in reverse-proxy scenarios
#	  #
#	  # NOTE: when a Proxy-Authentication header is sent but it is not
#	  # needed during ACL checking the username is NOT logged
#	  # in access.log.
#	  #
#	  # NOTE: proxy_auth requires a EXTERNAL authentication program
#	  # to check username/password combinations (see
#	  # auth_param directive).
#	  #
#	  # NOTE: proxy_auth can't be used in a transparent/intercepting proxy
#	  # as the browser needs to be configured for using a proxy in order
#	  # to respond to proxy authentication.
#
#	acl aclname snmp_community string ...
#	  # A community string to limit access to your SNMP Agent [fast]
#	  # Example:
#	  #
#	  #	acl snmppublic snmp_community public
#
#	acl aclname maxconn number
#	  # This will be matched when the client's IP address has
#	  # more than <number> TCP connections established. [fast]
#	  # NOTE: This only measures direct TCP links so X-Forwarded-For
#	  # indirect clients are not counted.
#
#	acl aclname max_user_ip [-s] number
#	  # This will be matched when the user attempts to log in from more
#	  # than <number> different ip addresses. The authenticate_ip_ttl
#	  # parameter controls the timeout on the ip entries. [fast]
#	  # If -s is specified the limit is strict, denying browsing
#	  # from any further IP addresses until the ttl has expired. Without
#	  # -s Squid will just annoy the user by "randomly" denying requests.
#	  # (the counter is reset each time the limit is reached and a
#	  # request is denied)
#	  # NOTE: in acceleration mode or where there is mesh of child proxies,
#	  # clients may appear to come from multiple addresses if they are
#	  # going through proxy farms, so a limit of 1 may cause user problems.
#
#	acl aclname random probability
#	  # Pseudo-randomly match requests. Based on the probability given.
#	  # Probability may be written as a decimal (0.333), fraction (1/3)
#	  # or ratio of matches:non-matches (3:5).
#
#	acl aclname req_mime_type [-i] mime-type ...
#	  # regex match against the mime type of the request generated
#	  # by the client. Can be used to detect file upload or some
#	  # types HTTP tunneling requests [fast]
#	  # NOTE: This does NOT match the reply. You cannot use this
#	  # to match the returned file type.
#
#	acl aclname req_header header-name [-i] any\.regex\.here
#	  # regex match against any of the known request headers.  May be
#	  # thought of as a superset of "browser", "referer" and "mime-type"
#	  # ACL [fast]
#
#	acl aclname rep_mime_type [-i] mime-type ...
#	  # regex match against the mime type of the reply received by
#	  # squid. Can be used to detect file download or some
#	  # types HTTP tunneling requests. [fast]
#	  # NOTE: This has no effect in http_access rules. It only has
#	  # effect in rules that affect the reply data stream such as
#	  # http_reply_access.
#
#	acl aclname rep_header header-name [-i] any\.regex\.here
#	  # regex match against any of the known reply headers. May be
#	  # thought of as a superset of "browser", "referer" and "mime-type"
#	  # ACLs [fast]
#
#	acl aclname external class_name [arguments...]
#	  # external ACL lookup via a helper class defined by the
#	  # external_acl_type directive [slow]
#
#	acl aclname user_cert attribute values...
#	  # match against attributes in a user SSL certificate
#	  # attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]
#
#	acl aclname ca_cert attribute values...
#	  # match against attributes a users issuing CA SSL certificate
#	  # attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]
#
#	acl aclname ext_user [-i] username ...
#	acl aclname ext_user_regex [-i] pattern ...
#	  # string match on username returned by external acl helper [slow]
#	  # use REQUIRED to accept any non-null user name.
#
#	acl aclname tag tagvalue ...
#	  # string match on tag returned by external acl helper [fast]
#	  # DEPRECATED. Only the first tag will match with this ACL.
#	  # Use the 'note' ACL instead for handling multiple tag values.
#
#	acl aclname hier_code codename ...
#	  # string match against squid hierarchy code(s); [fast]
#	  #  e.g., DIRECT, PARENT_HIT, NONE, etc.
#	  #
#	  # NOTE: This has no effect in http_access rules. It only has
#	  # effect in rules that affect the reply data stream such as
#	  # http_reply_access.
#
#	acl aclname note [-m[=delimiters]] name [value ...]
#	  # match transaction annotation [fast]
#	  # Without values, matches any annotation with a given name.
#	  # With value(s), matches any annotation with a given name that
#	  # also has one of the given values.
#	  # If the -m flag is used, then the value of the named
#	  # annotation is interpreted as a list of tokens, and the ACL
#	  # matches individual name=token pairs rather than whole
#	  # name=value pairs. See "ACL Options" above for more info.
#	  # Annotation sources include note and adaptation_meta directives
#	  # as well as helper and eCAP responses.
#
#	acl aclname adaptation_service service ...
#	  # Matches the name of any icap_service, ecap_service,
#	  # adaptation_service_set, or adaptation_service_chain that Squid
#	  # has used (or attempted to use) for the master transaction.
#	  # This ACL must be defined after the corresponding adaptation
#	  # service is named in squid.conf. This ACL is usable with
#	  # adaptation_meta because it starts matching immediately after
#	  # the service has been selected for adaptation.
#
#	acl aclname transaction_initiator initiator ...
#	  # Matches transaction's initiator [fast]
#	  #
#	  # Supported initiators are:
#	  #  esi: matches transactions fetching ESI resources
#	  #  certificate-fetching: matches transactions fetching
#	  #     a missing intermediate TLS certificate
#	  #  cache-digest: matches transactions fetching Cache Digests
#	  #     from a cache_peer
#	  #  htcp: matches HTCP requests from peers
#	  #  icp: matches ICP requests to peers
#	  #  icmp: matches ICMP RTT database (NetDB) requests to peers
#	  #  asn: matches asns db requests
#	  #  internal: matches any of the above
#	  #  client: matches transactions containing an HTTP or FTP
#	  #     client request received at a Squid *_port
#	  #  all: matches any transaction, including internal transactions
#	  #     without a configurable initiator and hopefully rare
#	  #     transactions without a known-to-Squid initiator
#	  #
#	  # Multiple initiators are ORed.
#
#	acl aclname has component
#	  # matches a transaction "component" [fast]
#	  #
#	  # Supported transaction components are:
#	  #  request: transaction has a request header (at least)
#	  #  response: transaction has a response header (at least)
#	  #  ALE: transaction has an internally-generated Access Log Entry
#	  #       structure; bugs notwithstanding, all transaction have it
#	  #
#	  # For example, the following configuration helps when dealing with HTTP
#	  # clients that close connections without sending a request header:
#	  #
#	  #  acl hasRequest has request
#	  #  acl logMe note important_transaction
#	  #  # avoid "logMe ACL is used in context without an HTTP request" warnings
#	  #  access_log ... logformat=detailed hasRequest logMe
#	  #  # log request-less transactions, instead of ignoring them
#	  #  access_log ... logformat=brief !hasRequest
#	  #
#	  # Multiple components are not supported for one "acl" rule, but
#	  # can be specified (and are ORed) using multiple same-name rules:
#	  #
#	  #  # OK, this strange logging daemon needs request or response,
#	  #  # but can work without either a request or a response:
#	  #  acl hasWhatMyLoggingDaemonNeeds has request
#	  #  acl hasWhatMyLoggingDaemonNeeds has response
#
#	acl aclname any-of acl1 acl2 ...
#	  # match any one of the acls [fast or slow]
#	  # The first matching ACL stops further ACL evaluation.
#	  #
#	  # ACLs from multiple any-of lines with the same name are ORed.
#	  # For example, A = (a1 or a2) or (a3 or a4) can be written as
#	  #   acl A any-of a1 a2
#	  #   acl A any-of a3 a4
#	  #
#	  # This group ACL is fast if all evaluated ACLs in the group are fast
#	  # and slow otherwise.
#
#	acl aclname all-of acl1 acl2 ... 
#	  # match all of the acls [fast or slow]
#	  # The first mismatching ACL stops further ACL evaluation.
#	  #
#	  # ACLs from multiple all-of lines with the same name are ORed.
#	  # For example, B = (b1 and b2) or (b3 and b4) can be written as
#	  #   acl B all-of b1 b2
#	  #   acl B all-of b3 b4
#	  #
#	  # This group ACL is fast if all evaluated ACLs in the group are fast
#	  # and slow otherwise.
#
#	Examples:
#		acl macaddress arp 09:00:2b:23:45:67
#		acl myexample dst_as 1241
#		acl password proxy_auth REQUIRED
#		acl fileupload req_mime_type -i ^multipart/form-data$
#		acl javascript rep_mime_type -i ^application/x-javascript$
#
#Default:
# ACLs all, manager, localhost, and to_localhost are predefined.
#
#
# Recommended minimum configuration:
#

# Example rule allowing access from your local networks.
# Adapt to list your (internal) IP networks from where browsing
# should be allowed
acl localnet src 0.0.0.1-0.255.255.255	# RFC 1122 "this" network (LAN)
acl localnet src TUNNEL_CLIENT_SUBNET
# acl localnet src 10.0.0.0/8		# RFC 1918 local private network (LAN)
#acl localnet src 100.64.0.0/10		# RFC 6598 shared address space (CGN)
# acl localnet src 169.254.0.0/16 	# RFC 3927 link-local (directly plugged) machines
# acl localnet src 172.16.0.0/12		# RFC 1918 local private network (LAN)
# acl localnet src 192.168.0.0/16		# RFC 1918 local private network (LAN)
# acl localnet src fc00::/7       	# RFC 4193 local private network range
# acl localnet src fe80::/10      	# RFC 4291 link-local (directly plugged) machines

acl SSL_ports port 443
acl Safe_ports port 80		# http
# acl Safe_ports port 21		# ftp
acl Safe_ports port 443		# https
# acl Safe_ports port 70		# gopher
# acl Safe_ports port 210		# wais
# acl Safe_ports port 1025-65535	# unregistered ports
# acl Safe_ports port 280		# http-mgmt
# acl Safe_ports port 488		# gss-http
# acl Safe_ports port 591		# filemaker
# acl Safe_ports port 777		# multiling http
acl CONNECT method CONNECT

#  TAG: http_access
#	Allowing or Denying access based on defined access lists
#
#	To allow or deny a message received on an HTTP, HTTPS, or FTP port:
#	http_access allow|deny [!]aclname ...
#
#	NOTE on default values:
#
#	If there are no "access" lines present, the default is to deny
#	the request.
#
#	If none of the "access" lines cause a match, the default is the
#	opposite of the last line in the list.  If the last line was
#	deny, the default is allow.  Conversely, if the last line
#	is allow, the default will be deny.  For these reasons, it is a
#	good idea to have an "deny all" entry at the end of your access
#	lists to avoid potential confusion.
#
#	This clause supports both fast and slow acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
#Default:
# Deny, unless rules exist in squid.conf.
#

#
# Recommended minimum Access Permission configuration:
#
# Deny requests to certain unsafe ports
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
#http_access deny to_localhost

#
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#
include /etc/squid/conf.d/*

acl allowlist dstdomain "/etc/squid/allowlist"
http_access allow allowlist

# Example rule allowing access from your local networks.
# Adapt localnet in the ACL section to list your (internal) IP networks
# from where browsing should be allowed
http_access allow localnet
http_access allow localhost

# And finally deny all other access to this proxy
http_access deny all

#  TAG: http_port
#	Usage:	port [mode] [options]
#		hostname:port [mode] [options]
#		1.2.3.4:port [mode] [options]
#
#	The socket addresses where Squid will listen for HTTP client
#	requests.  You may specify multiple socket addresses.
#	There are three forms: port alone, hostname with port, and
#	IP address with port.  If you specify a hostname or IP
#	address, Squid binds the socket to that specific
#	address. Most likely, you do not need to bind to a specific
#	address, so you can use the port number alone.
#
#	If you are running Squid in accelerator mode, you
#	probably want to listen on port 80 also, or instead.
#
#	The -a command line option may be used to specify additional
#	port(s) where Squid listens for proxy request. Such ports will
#	be plain proxy ports with no options.
#
#	You may specify multiple socket addresses on multiple lines.
#
#	Modes:
#
#	   intercept	Support for IP-Layer NAT interception delivering
#			traffic to this Squid port.
#			NP: disables authentication on the port.
#
#	   tproxy	Support Linux TPROXY (or BSD divert-to) with spoofing
#			of outgoing connections using the client IP address.
#			NP: disables authentication on the port.
#
#	   accel	Accelerator / reverse proxy mode
#
#	   ssl-bump	For each CONNECT request allowed by ssl_bump ACLs,
#			establish secure connection with the client and with
#			the server, decrypt HTTPS messages as they pass through
#			Squid, and treat them as unencrypted HTTP messages,
#			becoming the man-in-the-middle.
#
#			The ssl_bump option is required to fully enable
#			bumping of CONNECT requests.
#
#	Omitting the mode flag causes default forward proxy mode to be used.
#
#
#	Accelerator Mode Options:
#
#	   defaultsite=domainname
#			What to use for the Host: header if it is not present
#			in a request. Determines what site (not origin server)
#			accelerators should consider the default.
#
#	   no-vhost	Disable using HTTP/1.1 Host header for virtual domain support.
#
#	   protocol=	Protocol to reconstruct accelerated and intercepted
#			requests with. Defaults to HTTP/1.1 for http_port and
#			HTTPS/1.1 for https_port.
#			When an unsupported value is configured Squid will
#			produce a FATAL error.
#			Values: HTTP or HTTP/1.1, HTTPS or HTTPS/1.1
#
#	   vport	Virtual host port support. Using the http_port number
#			instead of the port passed on Host: headers.
#
#	   vport=NN	Virtual host port support. Using the specified port
#			number instead of the port passed on Host: headers.
#
#	   act-as-origin
#			Act as if this Squid is the origin server.
#			This currently means generate new Date: and Expires:
#			headers on HIT instead of adding Age:.
#
#	   ignore-cc	Ignore request Cache-Control headers.
#
#			WARNING: This option violates HTTP specifications if
#			used in non-accelerator setups.
#
#	   allow-direct	Allow direct forwarding in accelerator mode. Normally
#			accelerated requests are denied direct forwarding as if
#			never_direct was used.
#
#			WARNING: this option opens accelerator mode to security
#			vulnerabilities usually only affecting in interception
#			mode. Make sure to protect forwarding with suitable
#			http_access rules when using this.
#
#
#	SSL Bump Mode Options:
#	    In addition to these options ssl-bump requires TLS/SSL options.
#
#	   generate-host-certificates[=<on|off>]
#			Dynamically create SSL server certificates for the
#			destination hosts of bumped CONNECT requests.When 
#			enabled, the cert and key options are used to sign
#			generated certificates. Otherwise generated
#			certificate will be selfsigned.
#			If there is a CA certificate lifetime of the generated 
#			certificate equals lifetime of the CA certificate. If
#			generated certificate is selfsigned lifetime is three 
#			years.
#			This option is enabled by default when ssl-bump is used.
#			See the ssl-bump option above for more information.
#			
#	   dynamic_cert_mem_cache_size=SIZE
#			Approximate total RAM size spent on cached generated
#			certificates. If set to zero, caching is disabled. The
#			default value is 4MB.
#
#	TLS / SSL Options:
#
#	   tls-cert=	Path to file containing an X.509 certificate (PEM format)
#			to be used in the TLS handshake ServerHello.
#
#			If this certificate is constrained by KeyUsage TLS
#			feature it must allow HTTP server usage, along with
#			any additional restrictions imposed by your choice
#			of options= settings.
#
#			When OpenSSL is used this file may also contain a
#			chain of intermediate CA certificates to send in the
#			TLS handshake.
#
#			When GnuTLS is used this option (and any paired
#			tls-key= option) may be repeated to load multiple
#			certificates for different domains.
#
#			Also, when generate-host-certificates=on is configured
#			the first tls-cert= option must be a CA certificate
#			capable of signing the automatically generated
#			certificates.
#
#	   tls-key=	Path to a file containing private key file (PEM format)
#			for the previous tls-cert= option.
#
#			If tls-key= is not specified tls-cert= is assumed to
#			reference a PEM file containing both the certificate
#			and private key.
#
#	   cipher=	Colon separated list of supported ciphers.
#			NOTE: some ciphers such as EDH ciphers depend on
#			      additional settings. If those settings are
#			      omitted the ciphers may be silently ignored
#			      by the OpenSSL library.
#
#	   options=	Various SSL implementation options. The most important
#			being:
#
#			    NO_SSLv3    Disallow the use of SSLv3
#
#			    NO_TLSv1    Disallow the use of TLSv1.0
#
#			    NO_TLSv1_1  Disallow the use of TLSv1.1
#
#			    NO_TLSv1_2  Disallow the use of TLSv1.2
#
#			    SINGLE_DH_USE
#				      Always create a new key when using
#				      temporary/ephemeral DH key exchanges
#
#			    SINGLE_ECDH_USE
#				      Enable ephemeral ECDH key exchange.
#				      The adopted curve should be specified
#				      using the tls-dh option.
#
#			    NO_TICKET
#				      Disable use of RFC5077 session tickets.
#				      Some servers may have problems
#				      understanding the TLS extension due
#				      to ambiguous specification in RFC4507.
#
#			    ALL       Enable various bug workarounds
#				      suggested as "harmless" by OpenSSL
#				      Be warned that this reduces SSL/TLS
#				      strength to some attacks.
#
#			See the OpenSSL SSL_CTX_set_options documentation for a
#			more complete list.
#
#	   clientca=	File containing the list of CAs to use when
#			requesting a client certificate.
#
#	   tls-cafile=	PEM file containing CA certificates to use when verifying
#			client certificates. If not configured clientca will be
#			used. May be repeated to load multiple files.
#
#	   capath=	Directory containing additional CA certificates
#			and CRL lists to use when verifying client certificates.
#			Requires OpenSSL or LibreSSL.
#
#	   crlfile=	File of additional CRL lists to use when verifying
#			the client certificate, in addition to CRLs stored in
#			the capath. Implies VERIFY_CRL flag below.
#
#	   tls-dh=[curve:]file
#			File containing DH parameters for temporary/ephemeral DH key
#			exchanges, optionally prefixed by a curve for ephemeral ECDH
#			key exchanges.
#			See OpenSSL documentation for details on how to create the
#			DH parameter file. Supported curves for ECDH can be listed
#			using the "openssl ecparam -list_curves" command.
#			WARNING: EDH and EECDH ciphers will be silently disabled if
#				 this option is not set.
#
#	   sslflags=	Various flags modifying the use of SSL:
#			    DELAYED_AUTH
#				Don't request client certificates
#				immediately, but wait until acl processing
#				requires a certificate (not yet implemented).
#			    NO_SESSION_REUSE
#				Don't allow for session reuse. Each connection
#				will result in a new SSL session.
#			    VERIFY_CRL
#				Verify CRL lists when accepting client
#				certificates.
#			    VERIFY_CRL_ALL
#				Verify CRL lists for all certificates in the
#				client certificate chain.
#
#	   tls-default-ca[=off]
#			Whether to use the system Trusted CAs. Default is OFF.
#
#	   tls-no-npn	Do not use the TLS NPN extension to advertise HTTP/1.1.
#
#	   sslcontext=	SSL session ID context identifier.
#
#	Other Options:
#
#	   connection-auth[=on|off]
#	                use connection-auth=off to tell Squid to prevent 
#	                forwarding Microsoft connection oriented authentication
#			(NTLM, Negotiate and Kerberos)
#
#	   disable-pmtu-discovery=
#			Control Path-MTU discovery usage:
#			    off		lets OS decide on what to do (default).
#			    transparent	disable PMTU discovery when transparent
#					support is enabled.
#			    always	disable always PMTU discovery.
#
#			In many setups of transparently intercepting proxies
#			Path-MTU discovery can not work on traffic towards the
#			clients. This is the case when the intercepting device
#			does not fully track connections and fails to forward
#			ICMP must fragment messages to the cache server. If you
#			have such setup and experience that certain clients
#			sporadically hang or never complete requests set
#			disable-pmtu-discovery option to 'transparent'.
#
#	   name=	Specifies a internal name for the port. Defaults to
#			the port specification (port or addr:port)
#
#	   tcpkeepalive[=idle,interval,timeout]
#			Enable TCP keepalive probes of idle connections.
#			In seconds; idle is the initial time before TCP starts
#			probing the connection, interval how often to probe, and
#			timeout the time before giving up.
#
#	   require-proxy-header
#			Require PROXY protocol version 1 or 2 connections.
#			The proxy_protocol_access is required to whitelist
#			downstream proxies which can be trusted.
#
#	If you run Squid on a dual-homed machine with an internal
#	and an external interface we recommend you to specify the
#	internal address:port in http_port. This way Squid will only be
#	visible on the internal address.
#
#

# Squid normally listens to port 3128
http_port PROXY_PORT

#  TAG: coredump_dir
#	By default Squid leaves core files in the directory from where
#	it was started. If you set 'coredump_dir' to a directory
#	that exists, Squid will chdir() to that directory at startup
#	and coredump files will be left there.
#
#Default:
# Use the directory from where Squid was started.
#

# Leave coredumps in the first cache dir
coredump_dir /var/spool/squid

#  TAG: refresh_pattern
#	usage: refresh_pattern [-i] regex min percent max [options]
#
#	By default, regular expressions are CASE-SENSITIVE.  To make
#	them case-insensitive, use the -i option.
#
#	'Min' is the time (in minutes) an object without an explicit
#	expiry time should be considered fresh. The recommended
#	value is 0, any higher values may cause dynamic applications
#	to be erroneously cached unless the application designer
#	has taken the appropriate actions.
#
#	'Percent' is a percentage of the objects age (time since last
#	modification age) an object without explicit expiry time
#	will be considered fresh.
#
#	'Max' is an upper limit on how long objects without an explicit
#	expiry time will be considered fresh. The value is also used
#	to form Cache-Control: max-age header for a request sent from
#	Squid to origin/parent.
#
#	options: override-expire
#		 override-lastmod
#		 reload-into-ims
#		 ignore-reload
#		 ignore-no-store
#		 ignore-private
#		 max-stale=NN
#		 refresh-ims
#		 store-stale
#
#		override-expire enforces min age even if the server
#		sent an explicit expiry time (e.g., with the
#		Expires: header or Cache-Control: max-age). Doing this
#		VIOLATES the HTTP standard.  Enabling this feature
#		could make you liable for problems which it causes.
#
#		Note: override-expire does not enforce staleness - it only extends
#		freshness / min. If the server returns a Expires time which
#		is longer than your max time, Squid will still consider
#		the object fresh for that period of time.
#
#		override-lastmod enforces min age even on objects
#		that were modified recently.
#
#		reload-into-ims changes a client no-cache or ``reload''
#		request for a cached entry into a conditional request using
#		If-Modified-Since and/or If-None-Match headers, provided the
#		cached entry has a Last-Modified and/or a strong ETag header.
#		Doing this VIOLATES the HTTP standard. Enabling this feature
#		could make you liable for problems which it causes.
#
#		ignore-reload ignores a client no-cache or ``reload''
#		header. Doing this VIOLATES the HTTP standard. Enabling
#		this feature could make you liable for problems which
#		it causes.
#
#		ignore-no-store ignores any ``Cache-control: no-store''
#		headers received from a server. Doing this VIOLATES
#		the HTTP standard. Enabling this feature could make you
#		liable for problems which it causes.
#
#		ignore-private ignores any ``Cache-control: private''
#		headers received from a server. Doing this VIOLATES
#		the HTTP standard. Enabling this feature could make you
#		liable for problems which it causes.
#
#		refresh-ims causes squid to contact the origin server
#		when a client issues an If-Modified-Since request. This
#		ensures that the client will receive an updated version
#		if one is available.
#
#		store-stale stores responses even if they don't have explicit 
#		freshness or a validator (i.e., Last-Modified or an ETag) 
#		present, or if they're already stale. By default, Squid will 
#		not cache such responses because they usually can't be
#		reused. Note that such responses will be stale by default.
#
#		max-stale=NN provide a maximum staleness factor. Squid won't
#		serve objects more stale than this even if it failed to
#		validate the object. Default: use the max_stale global limit.
#
#	Basically a cached object is:
#
#		FRESH if expire > now, else STALE
#		STALE if age > max
#		FRESH if lm-factor < percent, else STALE
#		FRESH if age < min
#		else STALE
#
#	The refresh_pattern lines are checked in the order listed here.
#	The first entry which matches is used.  If none of the entries
#	match the default will be used.
#
#	Note, you must uncomment all the default lines if you want
#	to change one. The default setting is only active if none is
#	used.
#
#

#
# Add any of your own refresh_pattern entries above these.
#
refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern ^gopher:	1440	0%	1440
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern \/(Packages|Sources)(|\.bz2|\.gz|\.xz)$ 0 0% 0 refresh-ims
refresh_pattern \/Release(|\.gpg)$ 0 0% 0 refresh-ims
refresh_pattern \/InRelease$ 0 0% 0 refresh-ims
refresh_pattern \/(Translation-.*)(|\.bz2|\.gz|\.xz)$ 0 0% 0 refresh-ims
# example pattern for deb packages
#refresh_pattern (\.deb|\.udeb)$   129600 100% 129600
refresh_pattern .		0	20%	4320